provider "aws" {
  region = "eu-central-1"  
}

resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true

  tags = {
    Name = "VPC"
  }
}

resource "aws_subnet" "my_subnet_1" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "eu-central-1a"

  tags = {
    Name = "Subnet1"
  }
}

resource "aws_subnet" "my_subnet_2" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.2.0/24"
  availability_zone = "eu-central-1b"

  tags = {
    Name = "Subnet2"
  }
}

resource "aws_subnet" "my_subnet_3" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.3.0/24"
  availability_zone = "eu-central-1c"

  tags = {
    Name = "Subnet3"
  }
}

resource "aws_launch_configuration" "my_launch_configuration" {
  name          = "my-launch-configuration"
  image_id     = "ami-0c55b159cbfafe1f0"  # Example AMI, change to a valid one in your region
  instance_type = "t3.micro"  # Change as needed

  lifecycle {
    create_before_destroy = true
  }
}

resource "aws_autoscaling_group" "my_autoscaling_group" {
  launch_configuration = aws_launch_configuration.my_launch_configuration.id
  min_size            = 3
  max_size            = 3
  desired_capacity    = 3
  vpc_zone_identifier = [
    aws_subnet.my_subnet_1.id,
    aws_subnet.my_subnet_2.id,
    aws_subnet.my_subnet_3.id,
  ]

  tags = [
    {
      key                 = "Name"
      value               = "AutoScalingInstance"
      propagate_at_launch = true
    },
  ]
}
